{"ast":null,"code":"import _classCallCheck from \"D:/MyPortfolio-master/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/MyPortfolio-master/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nvar SequentialIDGenerator = /*#__PURE__*/function () {\n  function SequentialIDGenerator() {\n    var prefix = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    _classCallCheck(this, SequentialIDGenerator);\n    // ensure start with \"ae\" so \"ad\" is never produced\n    this.prefix = prefix;\n    this.count = 0;\n    this.offset = 374;\n    this.msb = 1295;\n    this.power = 2;\n  }\n  _createClass(SequentialIDGenerator, [{\n    key: \"next\",\n    value: function next() {\n      var id = this.increment().toString(36);\n      return this.prefix ? \"\".concat(this.prefix).concat(id) : id;\n    }\n  }, {\n    key: \"increment\",\n    value: function increment() {\n      var id = this.count + this.offset;\n      if (id === this.msb) {\n        this.offset += (this.msb + 1) * 9;\n        this.msb = Math.pow(36, ++this.power) - 1;\n      }\n      this.count++;\n      return id;\n    }\n  }]);\n  return SequentialIDGenerator;\n}();\nexport { SequentialIDGenerator as default };","map":{"version":3,"names":["SequentialIDGenerator","prefix","arguments","length","undefined","_classCallCheck","count","offset","msb","power","_createClass","key","value","next","id","increment","toString","concat","Math","pow","default"],"sources":["D:\\MyPortfolio-master\\node_modules\\styletron-engine-atomic\\dist-browser-esm\\src\\sequential-id-generator.ts"],"sourcesContent":["export default class SequentialIDGenerator {\n  prefix: string;\n  count: number;\n  offset: number;\n  msb: number;\n  power: number;\n\n  constructor(prefix: string = \"\") {\n    // ensure start with \"ae\" so \"ad\" is never produced\n    this.prefix = prefix;\n    this.count = 0;\n    this.offset = 374;\n    this.msb = 1295;\n    this.power = 2;\n  }\n\n  next() {\n    const id = this.increment().toString(36);\n    return this.prefix ? `${this.prefix}${id}` : id;\n  }\n\n  increment() {\n    const id = this.count + this.offset;\n    if (id === this.msb) {\n      this.offset += (this.msb + 1) * 9;\n      this.msb = Math.pow(36, ++this.power) - 1;\n    }\n    this.count++;\n    return id;\n  }\n}\n"],"mappings":";;IAAqBA,qBAAN;EAOb,SAAAA,sBAAA,EAAiC;IAAA,IAArBC,MAAc,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAlB;IAAAG,eAAA,OAAAL,qBAAA;IACT;IACA,KAAKC,MAAL,GAAcA,MAAd;IACA,KAAKK,KAAL,GAAa,CAAb;IACA,KAAKC,MAAL,GAAc,GAAd;IACA,KAAKC,GAAL,GAAW,IAAX;IACA,KAAKC,KAAL,GAAa,CAAb;EACD;EAAAC,YAAA,CAAAV,qBAAA;IAAAW,GAAA;IAAAC,KAAA,EAED,SAAAC,KAAA,EAAO;MACL,IAAMC,EAAE,GAAG,KAAKC,SAAL,GAAiBC,QAAjB,CAA0B,EAA1B,CAAX;MACA,OAAO,KAAKf,MAAL,MAAAgB,MAAA,CAAiB,KAAKhB,MAAO,EAAAgB,MAAA,CAAEH,EAAG,IAAIA,EAA7C;IACD;EAAA;IAAAH,GAAA;IAAAC,KAAA,EAED,SAAAG,UAAA,EAAY;MACV,IAAMD,EAAE,GAAG,KAAKR,KAAL,GAAa,KAAKC,MAA7B;MACA,IAAIO,EAAE,KAAK,KAAKN,GAAhB,EAAqB;QACnB,KAAKD,MAAL,IAAe,CAAC,KAAKC,GAAL,GAAW,CAAZ,IAAiB,CAAhC;QACA,KAAKA,GAAL,GAAWU,IAAI,CAACC,GAAL,CAAS,EAAT,EAAa,EAAE,KAAKV,KAApB,IAA6B,CAAxC;MACD;MACD,KAAKH,KAAL;MACA,OAAOQ,EAAP;IACD;EAAA;EAAA,OAAAd,qBAAA;AAAA;AAAA,SA7BkBA,qBAAN,IAAAoB,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}